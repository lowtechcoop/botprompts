"""Added revision table

Revision ID: 5e2265e6b9d7
Revises: 17876c4ea29d
Create Date: 2023-04-17 22:47:11.640484

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "5e2265e6b9d7"
down_revision = "17876c4ea29d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "prompts_revisions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("prompt_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=4096), nullable=False),
        sa.Column("prompt_text", sa.String(length=4096), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["prompt_id"],
            ["prompts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_prompts_version_prompt_id"),
        "prompts_revisions",
        ["prompt_id"],
        unique=False,
    )
    op.add_column("prompts", sa.Column("revision_id", sa.Integer(), nullable=True))

    op.execute(
        """
        INSERT INTO prompts_revisions (prompt_id, description, prompt_text, is_active)
        SELECT id as prompt_id, description, prompt_text, True as is_active
            FROM prompts;
        """
    )

    op.execute(
        """
        UPDATE prompts p
        SET revision_id = pv.id
        FROM prompts_revisions pv
        WHERE p.id = pv.prompt_id;
        """
    )

    op.alter_column("prompts", "revision_id", nullable=False)

    op.drop_index("ix_prompts_parent_id", table_name="prompts")
    op.create_index(
        op.f("ix_prompts_revision_id"), "prompts", ["revision_id"], unique=False
    )
    op.drop_constraint("prompts_parent_id_fkey", "prompts", type_="foreignkey")
    op.create_foreign_key(None, "prompts", "prompts_revisions", ["revision_id"], ["id"])
    op.drop_column("prompts", "parent_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "prompts",
        sa.Column("parent_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "prompts", type_="foreignkey")
    op.create_foreign_key(
        "prompts_parent_id_fkey", "prompts", "prompts", ["parent_id"], ["id"]
    )
    op.drop_index(op.f("ix_prompts_revision_id"), table_name="prompts")
    op.create_index("ix_prompts_parent_id", "prompts", ["parent_id"], unique=False)
    op.drop_column("prompts", "revision_id")
    op.drop_index(op.f("ix_prompts_version_prompt_id"), table_name="prompts_version")
    op.drop_table("prompts_version")
    # ### end Alembic commands ###
