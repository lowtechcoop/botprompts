"""Restructured prompt_id to revisions table

Revision ID: fc8341b0214e
Revises: 1bda0f0b5860
Create Date: 2023-04-18 00:28:54.172766

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fc8341b0214e"
down_revision = "1bda0f0b5860"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_prompts_current_revision_id", table_name="prompts")
    op.drop_constraint(
        "prompts_current_revision_id_fkey", "prompts", type_="foreignkey"
    )
    op.drop_column("prompts", "current_revision_id")
    op.add_column(
        "prompts_revisions", sa.Column("prompt_id", sa.Integer(), nullable=False)
    )
    op.add_column(
        "prompts_revisions", sa.Column("is_current", sa.Boolean(), nullable=False)
    )
    op.create_index(
        op.f("ix_prompts_revisions_prompt_id"),
        "prompts_revisions",
        ["prompt_id"],
        unique=False,
    )
    op.create_foreign_key(None, "prompts_revisions", "prompts", ["prompt_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "prompts_revisions", type_="foreignkey")
    op.drop_index(
        op.f("ix_prompts_revisions_prompt_id"), table_name="prompts_revisions"
    )
    op.drop_column("prompts_revisions", "is_current")
    op.drop_column("prompts_revisions", "prompt_id")
    op.add_column(
        "prompts",
        sa.Column(
            "current_revision_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.create_foreign_key(
        "prompts_current_revision_id_fkey",
        "prompts",
        "prompts_revisions",
        ["current_revision_id"],
        ["id"],
    )
    op.create_index(
        "ix_prompts_current_revision_id",
        "prompts",
        ["current_revision_id"],
        unique=False,
    )
    # ### end Alembic commands ###
